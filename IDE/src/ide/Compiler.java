/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ide;

import java.awt.Color;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.DataInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JTextArea;
import ide.RunConsole;
import java.awt.Point;
/**
 *
 * @author anshal
 */
public class Compiler extends javax.swing.JFrame {
    public  int counter=1;
    JTextArea jt[]=new JTextArea[1000];
    Color bgcolor=new Color(49,79,79);
    
    /**
     * Creates new form Compiler
     */
    public Compiler() {
        initComponents();
//        browsed_area.setText("");
       
      
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        compile_code = new javax.swing.JButton();
        run = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        External_command = new javax.swing.JTextArea();
        jScrollPane8 = new javax.swing.JScrollPane();
        error_log = new javax.swing.JTextArea();
        clear_all = new javax.swing.JButton();
        TabArena = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        Debug_console = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        input = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        MainMenu = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        OpenFile = new javax.swing.JMenuItem();
        NewFile = new javax.swing.JMenuItem();
        SaveFile = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane5.setViewportView(jTextArea1);

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane6.setViewportView(jTextArea2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1366, 768));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 20, 40, -1));
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 20, 40, -1));

        compile_code.setBackground(new java.awt.Color(238, 232, 205));
        compile_code.setText("Compile");
        compile_code.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                compile_codeActionPerformed(evt);
            }
        });
        getContentPane().add(compile_code, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 10, 200, 40));

        run.setBackground(new java.awt.Color(238, 232, 205));
        run.setText("Run Code");
        run.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runActionPerformed(evt);
            }
        });
        getContentPane().add(run, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 10, 160, 40));

        External_command.setColumns(20);
        External_command.setRows(5);
        jScrollPane7.setViewportView(External_command);

        getContentPane().add(jScrollPane7, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 600, 530, 100));

        error_log.setEditable(false);
        error_log.setColumns(20);
        error_log.setRows(5);
        jScrollPane8.setViewportView(error_log);

        getContentPane().add(jScrollPane8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 600, 800, 100));

        clear_all.setBackground(new java.awt.Color(238, 232, 205));
        clear_all.setText("Clear all");
        clear_all.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clear_allActionPerformed(evt);
            }
        });
        getContentPane().add(clear_all, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 10, 178, 40));
        getContentPane().add(TabArena, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 1020, 530));

        jTextField1.setBackground(new java.awt.Color(95, 158, 160));
        jTextField1.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        jTextField1.setForeground(new java.awt.Color(255, 255, 255));
        jTextField1.setText("              *****INPUT*****");
        jTextField1.setEnabled(false);
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        Debug_console.setColumns(20);
        Debug_console.setRows(5);
        Debug_console.setPreferredSize(new java.awt.Dimension(159, 90));
        jScrollPane2.setViewportView(Debug_console);

        input.setColumns(20);
        input.setRows(5);
        jScrollPane3.setViewportView(input);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 270, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 270, Short.MAX_VALUE)
                    .addComponent(jScrollPane3))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(1070, -10, 290, 600));

        jPanel1.setBackground(new java.awt.Color(95, 158, 160));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1040, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 530, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 1040, 530));

        jLabel2.setText("jLabel2");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 20, -1, -1));

        jMenu1.setText("File");

        OpenFile.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        OpenFile.setText("Open File");
        OpenFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OpenFileActionPerformed(evt);
            }
        });
        jMenu1.add(OpenFile);

        NewFile.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        NewFile.setText("New File");
        NewFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewFileActionPerformed(evt);
            }
        });
        jMenu1.add(NewFile);

        SaveFile.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        SaveFile.setText("Save file");
        SaveFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveFileActionPerformed(evt);
            }
        });
        jMenu1.add(SaveFile);

        MainMenu.add(jMenu1);

        jMenu2.setText("View");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setText("Editor Option");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem1);

        MainMenu.add(jMenu2);

        setJMenuBar(MainMenu);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void runActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runActionPerformed
        // TODO add your handling code here:
        String homeDir = System.getProperty("user.home");
        File file=new File(homeDir+"/SystemTool/");
        if(!file.exists())
        {
            file.mkdirs();
        }
        file=new File(homeDir+"/SystemTool/input.txt");
        if(file.exists())
        {
            file.delete();
        }
        try {
            file.createNewFile();
            String s=input.getText();
            FileOutputStream fos=new  FileOutputStream(file);
            BufferedWriter bw=new BufferedWriter(new OutputStreamWriter(fos));
         
            bw.write(s);
            bw.close();
            fos.close();
        } catch (IOException ex) {
            Logger.getLogger(Compiler.class.getName()).log(Level.SEVERE, null, ex);
        }
         String[] cmd_2={"/bin/sh","-c","cd /home/anshal/SystemTool;timeout 1 ./ob_file < input.txt"};
            String f;
            Process p = null;
        try {
            p = Runtime.getRuntime().exec(cmd_2);
            System.out.println(p);
        } catch (IOException ex) {
            Logger.getLogger(Compiler.class.getName()).log(Level.SEVERE, null, ex);
        }
            BufferedReader br_2=new BufferedReader(new InputStreamReader(p.getInputStream()));
            BufferedReader br_3=new BufferedReader(new InputStreamReader(p.getErrorStream()));
            RunConsole rc=new RunConsole();
            rc.setVisible(true);
            rc.OutputArea.setBackground(new Color(0,0,0));
            rc.OutputArea.setForeground(new Color(255,255,255));
            
            error_log.setText("");
        try {
            while((f=br_2.readLine())!=null)
            {
//                output.append(f+"\n");
                rc.OutputArea.append(f+"\n");
            }
            while((f=br_3.readLine())!=null)
            {
                error_log.append(f+"\n");
            }
            br_2.close();
            br_3.close();
        } catch (IOException ex) {
            Logger.getLogger(Compiler.class.getName()).log(Level.SEVERE, null, ex);
        }
            
    }//GEN-LAST:event_runActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        EditorOPtion ep=new EditorOPtion();
        ep.setVisible(true);
        ep.setLocationRelativeTo(null);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void NewFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewFileActionPerformed
        // TODO add your handling code here:
        
        jt[counter]=new JTextArea();
        jt[counter].setBackground(bgcolor);
        jt[counter].setForeground(new Color(255,255,255));
        TabArena.addTab("untitled tab"+counter,jt[counter]);
        TabArena.setFocusable(true);
        TabArena.setSelectedComponent(jt[counter]);
        System.out.println(TabArena.getSelectedIndex());
        
        counter++;
    }//GEN-LAST:event_NewFileActionPerformed

    private void SaveFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveFileActionPerformed
        // TODO add your handling code here:
       
        String home=System.getProperty("user.home");
        File file=new File(home+"/IdeCodes/");
        if(!file.exists())
        {
            file.mkdirs();
        }
        try{
        int ind=TabArena.getSelectedIndex();
        String code=jt[ind+1].getText();
        JFileChooser jfc=new JFileChooser();
        jfc.setCurrentDirectory(file);
       
        int result=jfc.showSaveDialog(null);
        if(result==JFileChooser.APPROVE_OPTION)
        {
            File ff=jfc.getSelectedFile();
            try {
                FileOutputStream fos=new  FileOutputStream(ff);
                BufferedWriter bw=new BufferedWriter(new OutputStreamWriter(fos));
                
                bw.write(code);
                bw.close();
                fos.close();
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Compiler.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(Compiler.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
        }
        catch(Exception e){
            System.out.println("Error\n");
        }
    }//GEN-LAST:event_SaveFileActionPerformed

    private void OpenFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OpenFileActionPerformed
       
        FileInputStream fis=null;
        try {
            // TODO add your handling code here:
            
            JFileChooser jfc=new JFileChooser();
            String def=System.getProperty("user.home")+"/IdeCodes/";
            File fif=new File(def);
            jfc.setCurrentDirectory(fif);
            int result=jfc.showOpenDialog(null);
            File FileToOpen = null;
            String TabName="";
            if(result==JFileChooser.APPROVE_OPTION)
            {
                FileToOpen=jfc.getSelectedFile();
        }       TabName =FileToOpen.getName();
              fis = new  FileInputStream(FileToOpen);
            BufferedReader br=new  BufferedReader(new InputStreamReader(fis));
            jt[counter]=new JTextArea();
            
            jt[counter].setBackground(bgcolor);
            jt[counter].setForeground(new Color(255,255,255));
            TabArena.addTab(TabName,jt[counter]);
            String tmp;
            while((tmp=br.readLine())!=null)
            {
                jt[counter].append(tmp+"\n");
            }
            counter++;
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Compiler.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Compiler.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                fis.close();
            } catch (IOException ex) {
                Logger.getLogger(Compiler.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
        
    }//GEN-LAST:event_OpenFileActionPerformed

    private void compile_codeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_compile_codeActionPerformed
        // TODO add your handling code here:
        String homeDir = System.getProperty("user.home");
        File file=new File(homeDir+"/SystemTool/");
        if(!file.exists())
        {
            file.mkdirs();
        }
        file=new File(homeDir+"/SystemTool/tmp.cpp");
        if(file.exists())
        {
            file.delete();

        }
        try {
            file.createNewFile();

        } catch (IOException ex) {
            Logger.getLogger(Compiler.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            FileOutputStream fos=new FileOutputStream(file);
            BufferedWriter bw=new BufferedWriter(new OutputStreamWriter(fos));
            int ind=TabArena.getSelectedIndex();

            String s=jt[ind+1].getText();
            System.out.println(s);
            bw.write(s);
            bw.close();
            fos.close();
            String[] cmd={"/bin/sh","-c","cd /home/anshal/SystemTool;g++ tmp.cpp -o ob_file"};
            Process p=Runtime.getRuntime().exec(cmd);
            BufferedReader br=new BufferedReader(new InputStreamReader(p.getErrorStream()));

            String f;
            while((f=br.readLine())!=null)
            {
                error_log.append(f);
            }
            br.close();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Compiler.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Compiler.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_compile_codeActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void clear_allActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clear_allActionPerformed
        // TODO add your handling code here:
        //        browsed_area.setText("");

        input.setText("");
        //        output.setText("");
        error_log.setText("");
        External_command.setText("");
    }//GEN-LAST:event_clear_allActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Compiler.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Compiler.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Compiler.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Compiler.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Compiler().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea Debug_console;
    private javax.swing.JTextArea External_command;
    private javax.swing.JMenuBar MainMenu;
    private javax.swing.JMenuItem NewFile;
    private javax.swing.JMenuItem OpenFile;
    private javax.swing.JMenuItem SaveFile;
    private javax.swing.JTabbedPane TabArena;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton clear_all;
    private javax.swing.JButton compile_code;
    private javax.swing.JTextArea error_log;
    private javax.swing.JTextArea input;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JButton run;
    // End of variables declaration//GEN-END:variables
}
